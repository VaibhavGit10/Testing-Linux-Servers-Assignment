#!/bin/bash

# Variables
DATE=$(date +%F)
BACKUP_DIR="/backups"
NGINX_CONFIG="/etc/nginx"
NGINX_DOCROOT="/usr/share/nginx/html"
BACKUP_FILE="$BACKUP_DIR/nginx_backup_$DATE.tar.gz"
LOG_FILE="$BACKUP_DIR/nginx_backup_$DATE.log"
OWNER="mike"

# Ensure backup directory exists
sudo mkdir -p $BACKUP_DIR
sudo chown $OWNER:$OWNER $BACKUP_DIR

# Start logging
echo "üìå Nginx Backup Log - $DATE" | tee "$LOG_FILE"
echo "------------------------------------" | tee -a "$LOG_FILE"
echo "üîπ Backup Directory: $BACKUP_DIR" | tee -a "$LOG_FILE"
echo "üîπ Backup File: $BACKUP_FILE" | tee -a "$LOG_FILE"
echo "üîπ Nginx Config: $NGINX_CONFIG" | tee -a "$LOG_FILE"
echo "üîπ Nginx Document Root: $NGINX_DOCROOT" | tee -a "$LOG_FILE"
echo "------------------------------------" | tee -a "$LOG_FILE"

# Backup process
echo "‚è≥ Creating backup..." | tee -a "$LOG_FILE"
if tar -czf "$BACKUP_FILE" $NGINX_CONFIG $NGINX_DOCROOT 2>> "$LOG_FILE"; then
    echo "‚úÖ Backup successfully created: $BACKUP_FILE" | tee -a "$LOG_FILE"
else
    echo "‚ùå Backup failed!" | tee -a "$LOG_FILE"
    exit 1
fi

# Verify backup integrity
echo "üîç Verifying backup integrity..." | tee -a "$LOG_FILE"
if tar -tzf "$BACKUP_FILE" > /dev/null 2>> "$LOG_FILE"; then
    echo "‚úÖ Backup verification successful." | tee -a "$LOG_FILE"
else
    echo "‚ùå Backup verification failed!" | tee -a "$LOG_FILE"
    exit 1
fi

# Set correct permissions
sudo chown $OWNER:$OWNER "$BACKUP_FILE" "$LOG_FILE"
sudo chmod 770 "$BACKUP_FILE" "$LOG_FILE"
echo "üîë Permissions set for $OWNER." | tee -a "$LOG_FILE"

echo "üöÄ Backup process completed." | tee -a "$LOG_FILE"
echo "------------------------------------" | tee -a "$LOG_FILE"
